---
###############################################################################
# Configuration of OpenStack user environment for Eiffel Demo.

# Path to create virtualenv in which to install python dependencies.
#eiffel_venv:

# List of OpenStack projects. Format is as required by the stackhpc.os-projects
# role.
eiffel_projects:
  - "{{ eiffel_demo_project }}"

# Definition of the eiffel demo project. Format is as required by the
# stackhpc.os-projects role.
eiffel_demo_project:
  name: demo
  description: Eiffel Demo demo project
  project_domain: default
  user_domain: default
  users: "{{ eiffel_resops_users }}"
  quotas: "{{ eiffel_unlimited_quotas }}"

# List of users in the eiffel ResOps team. Format is as required by the
# stackhpc.os-projects role.
eiffel_resops_users:
  - name: hpcgodd1
    password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      37386366333266356464663865316538653361313830633036626436613432636361386463373139
      3530303436393137613263656530333465313861316336330a623562323161326330383237303061
      63663266383362336361666134313364653037623430363638363333346435366230613135623763
      3063346333353831650a373138346633663663343638656163346533663735626133306438363066
      6638
    roles: "{{ eiffel_admin_roles }}"

# List of roles to apply to admin users in the eiffel demo project.
eiffel_admin_roles:
  - admin
  - heat_stack_owner
  - monasca-user

# List of roles to apply to regular users in the eiffel demo project.
eiffel_user_roles:
  - heat_stack_owner
  - observer
  - monasca-read-only-user

# Dict of quotas to set for projects with unlimited resource quotas
eiffel_unlimited_quotas:
  cores: -1
  floating_ips: -1
  injected_files: -1
  injected_file_size: -1
  instances: -1
  key_pairs: -1
  fixed_ips: -1
  ram: -1
  secgroup_rules: -1
  secgroups: -1

###############################################################################
# Configuration of networks, subnets and routers for eiffel.

# List of networks in the eiffel system. Format is as required by the
# stackhpc.os-networks role.
eiffel_networks:
  - "{{ eiffel_network_external }}"
  - "{{ eiffel_network_internal }}"
  - "{{ eiffel_network_inspection }}"
  - "{{ eiffel_network_storage }}"
  - "{{ eiffel_network_demo_vlan }}"
  - "{{ eiffel_network_demo_vxlan }}"
  - "{{ eiffel_network_demo_hs_vlan }}"
  - "{{ eiffel_network_demo_provider }}"
  - "{{ eiffel_network_infiniband }}"

# eiffel external network name.
eiffel_network_external_name: "external"

# eiffel external network.
eiffel_network_external:
  name: "{{ eiffel_network_external_name }}"
  project: "admin"
  provider_network_type: "vlan"
  provider_physical_network: "physnet1"
  provider_segmentation_id: 60
  shared: true
  external: true
  # Subnet configuration.
  subnets:
    - "{{ eiffel_subnet_external }}"

# eiffel external subnet.
eiffel_subnet_external:
  name: "{{ eiffel_network_external_name }}"
  project: "admin"
  cidr: "10.60.0.0/16"
  gateway_ip: "10.60.255.1"
  allocation_pool_start: "10.60.2.0"
  allocation_pool_end: "10.60.5.255"
  # TODO: Add host route to storage subnet.

# eiffel internal network name.
eiffel_network_internal_name: "internal"

# eiffel internal network.
eiffel_network_internal:
  name: "{{ eiffel_network_internal_name }}"
  project: "admin"
  provider_network_type: "vlan"
  provider_physical_network: "physnet1"
  provider_segmentation_id: 65
  shared: false
  # Subnet configuration.
  subnets:
    - "{{ eiffel_subnet_internal }}"

# eiffel internal subnet.
eiffel_subnet_internal:
  name: "{{ eiffel_network_internal_name }}"
  project: "admin"
  cidr: "10.65.0.0/16"
  enable_dhcp: false
  allocation_pool_start: "10.65.0.2"
  allocation_pool_end: "10.65.0.4"

# eiffel inspection network name.
eiffel_network_inspection_name: "inspection-net"

# eiffel inspection network.
eiffel_network_inspection:
  name: "{{ eiffel_network_inspection_name }}"
  project: "admin"
  provider_network_type: "vlan"
  provider_physical_network: "physnet1"
  provider_segmentation_id: 71
  shared: false
  # Subnet configuration.
  subnets:
    - "{{ eiffel_subnet_inspection }}"

# eiffel inspection subnet.
eiffel_subnet_inspection:
  name: "{{ eiffel_network_inspection_name }}"
  project: "admin"
  cidr: "10.71.0.0/16"
  enable_dhcp: false
  allocation_pool_start: "10.71.0.1"
  allocation_pool_end: "10.71.0.1"

# eiffel storage network name.
eiffel_network_storage_name: "storage"

# eiffel storage network.
eiffel_network_storage:
  name: "{{ eiffel_network_storage_name }}"
  project: "admin"
  provider_network_type: "vlan"
  provider_physical_network: "physnet1"
  provider_segmentation_id: 66
  shared: true
  external: false
  # Subnet configuration.
  subnets:
    - "{{ eiffel_subnet_storage }}"

# eiffel storage subnet.
eiffel_subnet_storage:
  name: "{{ eiffel_network_storage_name }}"
  project: "admin"
  cidr: "10.66.0.0/16"
  allocation_pool_start: "10.66.2.0"
  allocation_pool_end: "10.66.2.255"

# eiffel demo VLAN network name.
eiffel_network_demo_vlan_name: "demo-vlan"

# eiffel demo VLAN network.
eiffel_network_demo_vlan:
  name: "{{ eiffel_network_demo_vlan_name }}"
  project: "{{ eiffel_demo_project.name }}"
  provider_network_type: "vlan"
  provider_physical_network: "physnet1"
  shared: false
  # Subnet configuration.
  subnets:
    - "{{ eiffel_subnet_demo_vlan }}"

# eiffel demo VLAN subnet.
eiffel_subnet_demo_vlan:
  name: "{{ eiffel_network_demo_vlan_name }}"
  project: "{{ eiffel_demo_project.name }}"
  cidr: "10.0.0.0/24"
  gateway_ip: "10.0.0.1"
  allocation_pool_start: "10.0.0.2"
  allocation_pool_end: "10.0.0.254"

# eiffel demo VXLAN network name.
eiffel_network_demo_vxlan_name: "demo-vxlan"

# eiffel demo VXLAN network.
eiffel_network_demo_vxlan:
  name: "{{ eiffel_network_demo_vxlan_name }}"
  project: "{{ eiffel_demo_project.name }}"
  provider_network_type: "vxlan"
  shared: false
  # Subnet configuration.
  subnets:
    - "{{ eiffel_subnet_demo_vxlan }}"

# eiffel demo VXLAN subnet.
eiffel_subnet_demo_vxlan:
  name: "{{ eiffel_network_demo_vxlan_name }}"
  project: "{{ eiffel_demo_project.name }}"
  cidr: "10.1.0.0/24"
  gateway_ip: "10.1.0.1"
  allocation_pool_start: "10.1.0.2"
  allocation_pool_end: "10.1.0.254"

# eiffel demo provider VLAN network name.
eiffel_network_demo_provider_name: "demo-provider"

# eiffel demo provider VLAN
eiffel_network_demo_provider:
  name: "{{ eiffel_network_demo_provider_name }}"
  project: "{{ eiffel_demo_project.name }}"
  provider_network_type: "vlan"
  provider_physical_network: "physnet1"
  provider_segmentation_id: 100
  shared: false
  # Subnet configuration.
  subnets:
    - "{{ eiffel_subnet_demo_provider }}"

# eiffel demo provider VLAN subnet
eiffel_subnet_demo_provider:
  name: "{{ eiffel_network_demo_provider_name }}"
  project: "{{ eiffel_demo_project.name }}"
  cidr: "10.100.0.0/16"
  gateway_ip: "10.100.0.1"
  allocation_pool_start: "10.100.1.0"
  allocation_pool_end: "10.100.99.255"
  host_routes:
    - destination: "10.66.0.0/16"
      nexthop: "10.100.0.2"

# eiffel demo high speed VLAN network name.
eiffel_network_demo_hs_vlan_name: "demo-hs-vlan"

# eiffel demo high speed VLAN network.
eiffel_network_demo_hs_vlan:
  name: "{{ eiffel_network_demo_hs_vlan_name }}"
  project: "{{ eiffel_demo_project.name }}"
  provider_network_type: "vlan"
  provider_physical_network: "physnet2"
  shared: false
  # Subnet configuration.
  subnets:
    - "{{ eiffel_subnet_demo_hs_vlan }}"

# eiffel demo high speed VLAN subnet.
eiffel_subnet_demo_hs_vlan:
  name: "{{ eiffel_network_demo_hs_vlan_name }}"
  project: "{{ eiffel_demo_project.name }}"
  cidr: "10.2.0.0/24"
  gateway_ip: "10.2.0.1"
  allocation_pool_start: "10.2.0.2"
  allocation_pool_end: "10.2.0.254"

# eiffel demo InfiniBand network name.
eiffel_network_infiniband_name: "infiniband"

# eiffel demo InfiniBand network.
eiffel_network_infiniband:
  name: "{{ eiffel_network_infiniband_name }}"
  project: "admin"
  provider_network_type: "flat"
  provider_physical_network: "physnet3"
  shared: true
  # Subnet configuration.
  subnets:
    - "{{ eiffel_subnet_infiniband }}"

# eiffel demo InfiniBand subnet.
eiffel_subnet_infiniband:
  name: "{{ eiffel_network_infiniband_name }}"
  project: "admin"
  cidr: "10.3.0.0/16"
  enable_dhcp: false
  allocation_pool_start: "10.3.0.1"
  allocation_pool_end: "10.3.0.254"

# List of routers in the eiffel demo project. Format is as required by the
# stackhpc.os-networks role.
eiffel_routers:
  - "{{ eiffel_router_provision }}"
  - "{{ eiffel_router_cleaning }}"
  - "{{ eiffel_router_inspection }}"
  - "{{ eiffel_router_demo }}"

# eiffel bare metal provisioning router.
eiffel_router_provision:
  - name: "provision"
    project: "admin"
    interfaces:
      - net: "{{ eiffel_network_internal_name }}"
        subnet: "{{ eiffel_network_internal_name }}"
        portip: "10.65.0.2"
      - net: "provision-net"
        subnet: "provision-net"
        portip: "10.69.0.1"

# eiffel bare metal cleaning router.
eiffel_router_cleaning:
  - name: "cleaning"
    project: "admin"
    interfaces:
      - net: "{{ eiffel_network_internal_name }}"
        subnet: "{{ eiffel_network_internal_name }}"
        portip: "10.65.0.3"
      - net: "cleaning-net"
        subnet: "cleaning-net"
        portip: "10.70.0.1"

# eiffel bare metal inspection router.
eiffel_router_inspection:
  - name: "inspection"
    project: "admin"
    interfaces:
      - net: "{{ eiffel_network_internal_name }}"
        subnet: "{{ eiffel_network_internal_name }}"
        portip: "10.65.0.4"
      - net: "inspection-net"
        subnet: "inspection-net"
        portip: "10.71.0.1"

# eiffel demo router.
eiffel_router_demo:
  - name: "{{ eiffel_demo_project.name }}"
    project: "{{ eiffel_demo_project.name }}"
    interfaces:
      - "{{ eiffel_network_demo_vlan_name }}"
      - "{{ eiffel_network_demo_vxlan_name }}"
      - "{{ eiffel_network_demo_hs_vlan_name }}"
      - "{{ eiffel_network_demo_provider_name }}"
    network: "{{ eiffel_network_external_name }}"

# List of security groups in the eiffel demo project.
# Format is as required by the stackhpc.os-networks role.
eiffel_security_groups:
  # Default security group for the eiffel demo project.
  - name: default
    project: "{{ eiffel_demo_project.name }}"
    rules:
      # Allow ICMP (for ping, etc.).
      - protocol: icmp
      # Allow SSH.
      - protocol: tcp
        port_range_min: 22
        port_range_max: 22

###############################################################################
# Configuration of nova flavors for eiffel.

# List of nova flavors in the eiffel demo project. Format is as required by the
# stackhpc.os-flavors role.
eiffel_flavors:
  - "{{ eiffel_flavor_baremetal_c6420 }}"

# Bare metal compute node.
eiffel_flavor_baremetal_c6420:
  name: "C6420-Xeon6148-192GB"
  ram: 196608
  disk: 0
  vcpus: 40
  extra_specs:
    "resources:CUSTOM_C6420_XEON6148_192GB": 1
    "resources:VCPU": 0
    "resources:MEMORY_MB": 0
    "resources:DISK_GB": 0

###############################################################################
# Software images for eiffel

eiffel_images:
  - "{{ eiffel_image_centos }}"
  - "{{ eiffel_image_centos_ib }}"
  - "{{ eiffel_image_centos_ohpc }}"

# Latest CentOS image
eiffel_image_centos:
  name: "CentOS7.5"
  elements:
    - "centos7"
    - "epel"
    - "selinux-permissive"
    - "dhcp-all-interfaces"
    - "vm"
  properties:
    os_distro: "centos"
    os_version: "7.5"

# Latest CentOS image, with support for accessing the InfiniBand network.
eiffel_image_centos_ib:
  name: "CentOS7.5-IB"
  elements:
    - "centos7"
    - "epel"
    - "selinux-permissive"
    - "dhcp-all-interfaces"
    - "vm"
    - "systemd-modules-load"
  env:
    DIB_SYSTEMD_MODULES_LOAD_CONTENT: "{{ eiffel_systemd_modules_load_ipoib }}"
    DIB_YUM_REPO_CONF: "{{ eiffel_cloud_init_0_7_9_25_repo_file }}"
  properties:
    os_distro: "centos"
    os_version: "7.5"

# Latest CentOS image, with OpenHPC and support for accessing the InfiniBand network.
eiffel_image_centos_ohpc:
  name: "CentOS7.5-OpenHPC"
  elements:
    - "centos7"
    - "epel"
    - "openhpc"
    - "selinux-permissive"
    - "dhcp-all-interfaces"
    - "vm"
    - "systemd-modules-load"
  env:
    DIB_SYSTEMD_MODULES_LOAD_CONTENT: "{{ eiffel_systemd_modules_load_ipoib }}"
    DIB_YUM_REPO_CONF: "{{ eiffel_cloud_init_0_7_9_25_repo_file }}"
    DIB_OPENHPC_GRPLIST: "ohpc-base-compute ohpc-slurm-client 'InfiniBand Support'"
    DIB_OPENHPC_PKGLIST: "lmod-ohpc mrsh-ohpc lustre-client-ohpc mvapich2-gnu-ohpc ntp"
    DIB_OPENHPC_DELETE_REPO: "n"
  properties:
    os_distro: "centos"
    os_version: "7.5"


# This creates a git checkout in the local user's home directory
eiffel_image_stackhpc_elements: "{{ ansible_env.PWD }}/stackhpc-image-elements"

eiffel_image_git_elements:
  - repo: "https://github.com/stackhpc/stackhpc-image-elements.git"
    local: "{{ eiffel_image_stackhpc_elements }}"

# Path to include
eiffel_image_elements:
  - "{{ eiffel_image_stackhpc_elements }}/elements"

# Yum repository config file for cloud-init repo.
# This contains a patched cloud-init package with support for configuring IP
# over Infiniband interfaces defined in a config drive.
eiffel_cloud_init_0_7_9_25_repo_file: "{{ playbook_dir }}/files/cloud-init-0.7.9-25.repo"

# Systemd modules-load.d file content for loading IPoIB interfaces:
eiffel_systemd_modules_load_ipoib: |
  # Load the IP over IB module prior to running cloud-init --local.
  ib_ipoib
  # Load the Mellanox IB driver.
  mlx4_ib
